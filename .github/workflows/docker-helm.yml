name: Docker and Helm

on:
  schedule:
    - cron: "0 10 * * *"
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:

permissions:
  contents: read
  packages: write

jobs:
  docker:
    
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Authenticate with GitHub Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true # ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  helm:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.9.2

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.7.0
      
      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --chart-dirs helm --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Check Version
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          python -m pip install -e .
          python -m pip install pyyaml
          python .github/workflows/scripts/check_version.py

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --chart-dirs helm --target-branch ${{ github.event.repository.default_branch }}

      - name: Authenticate with GitHub Packages
        if: steps.list-changed.outputs.changed == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: downcase REPO
        run: |
          echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: SHA Tag
        id: vars
        run: echo "sha_tag=sha-$(git rev-parse --short HEAD)" >>${GITHUB_ENV}

      - name: Pull Docker image
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          docker pull ghcr.io/${{ env.REPO }}:${{ env.sha_tag }}
          docker tag ghcr.io/${{ env.REPO }}:${{ env.sha_tag }} titiler-eopf:ci

      - name: Create kind cluster
        uses: helm/kind-action@v1.12.0
        if: steps.list-changed.outputs.changed == 'true'

      - name: Load container image in kind cluster
        run: kind load docker-image titiler-eopf:ci --name chart-testing
        if: steps.list-changed.outputs.changed == 'true'

      - name: Create Namespace
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          kubectl create namespace titiler-eopf

      - name: Create Secret
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          kubectl create secret generic titiler-eopf-secret -n titiler-eopf --from-literal=AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} --from-literal=AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --chart-dirs helm --namespace titiler-eopf

      # delete the pull request docker image to free up space
      - name: Delete Docker image
        run: docker rmi ghcr.io/${{ env.REPO }}:${{ env.sha_tag }}
